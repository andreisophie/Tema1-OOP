Starting audit...
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:13:17: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:14:17: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:15:17: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:16:17: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:23:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:27:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:31:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:35:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:40:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:42:20: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:43:33: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:44:57: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:45:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Card.java:46:43: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:3:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:5:8: Unused import - com.fasterxml.jackson.databind.node.JsonNodeFactory. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:6:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:18:17: Parameter deck should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:22:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:26:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:26:26: Parameter cards should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:30:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:43:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'toJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'toJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\Deck.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Environment.java:9:24: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Environment.java:9:34: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Environment.java:9:54: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Environment.java:9:71: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Environment.java:13:5: Class 'Environment' looks like designed for extension (can be subclassed), but the method 'toJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Environment' final or making the method 'toJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Firestorm.java:7:22: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Firestorm.java:7:32: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Firestorm.java:7:52: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Firestorm.java:7:69: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Firestorm.java:11:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Firestorm.java:12:18: Parameter targetRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\HeartHound.java:7:23: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\HeartHound.java:7:33: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\HeartHound.java:7:53: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\HeartHound.java:7:70: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\HeartHound.java:11:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\HeartHound.java:12:18: Parameter targetRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\HeartHound.java:26:25: '3' is a magic number. [MagicNumber]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Winterfell.java:7:23: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Winterfell.java:7:33: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Winterfell.java:7:53: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Winterfell.java:7:70: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Winterfell.java:11:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\environments\Winterfell.java:12:18: Parameter targetRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\EmpressThorina.java:7:27: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\EmpressThorina.java:7:37: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\EmpressThorina.java:7:57: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\EmpressThorina.java:7:74: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\EmpressThorina.java:11:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\EmpressThorina.java:12:18: Parameter targetRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\GeneralKocioraw.java:6:28: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\GeneralKocioraw.java:6:38: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\GeneralKocioraw.java:6:58: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\GeneralKocioraw.java:6:75: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\GeneralKocioraw.java:10:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\GeneralKocioraw.java:11:18: Parameter targetRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:4:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:12:26: '30' is a magic number. [MagicNumber]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:14:17: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:14:27: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:14:47: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:14:64: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:20:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:24:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:24:27: Parameter health should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:28:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'toJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'toJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:45:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:47:20: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:48:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:49:68: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:50:67: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:51:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\Hero.java:52:39: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\KingMudface.java:6:24: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\KingMudface.java:6:34: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\KingMudface.java:6:54: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\KingMudface.java:6:71: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\KingMudface.java:10:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\KingMudface.java:11:18: Parameter targetRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\LordRoyce.java:6:36: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\LordRoyce.java:7:22: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\LordRoyce.java:7:32: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\LordRoyce.java:7:52: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\LordRoyce.java:7:69: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\LordRoyce.java:11:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\heroes\LordRoyce.java:12:18: Parameter targetRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Caster.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Caster.java:5:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:7:21: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:8:21: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:9:21: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:10:21: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:11:21: Parameter health should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:12:21: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:13:21: Parameter prefRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:17:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'checkTarget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'checkTarget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:18:32: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:22:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Disciple.java:23:25: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:7:18: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:8:21: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:9:21: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:10:21: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:11:21: Parameter health should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:12:21: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:13:21: Parameter prefRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:17:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'checkTarget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'checkTarget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:18:32: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:22:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\Miraj.java:23:25: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:7:25: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:8:21: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:9:21: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:10:21: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:11:21: Parameter health should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:12:21: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:13:21: Parameter prefRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:17:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'checkTarget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'checkTarget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:18:32: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:22:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheCursedOne.java:23:25: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:7:22: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:8:21: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:9:21: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:10:21: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:11:21: Parameter health should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:12:21: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:13:21: Parameter prefRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:17:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'checkTarget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'checkTarget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:18:32: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:23:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\casterMinions\TheRipper.java:24:25: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:13:13: Variable 'frozen' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:14:13: Variable 'hasAttacked' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:15:9: Variable 'prefRow' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:16:13: Variable 'isTank' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:18:19: Parameter mana should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:19:19: Parameter description should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:20:19: Parameter colors should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:21:19: Parameter name should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:22:19: Parameter health should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:23:19: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:24:19: Parameter prefRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:25:19: Parameter isTank should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:35:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:35:24: Parameter target should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:44:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:49:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:53:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:53:27: Parameter health should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:57:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:61:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:61:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:65:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:69:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:69:27: Parameter frozen should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:73:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getPrefRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getPrefRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:77:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setPrefRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setPrefRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:77:28: Parameter prefRow should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:81:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:85:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:85:32: Parameter hasAttacked should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:89:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'isTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'isTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:93:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:93:25: Parameter tank should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:97:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'toJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'toJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:113:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:115:20: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:116:37: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:117:45: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:118:51: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:119:67: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:120:66: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\cards\minions\Minion.java:121:53: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:7:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:8:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:8:39: Variable 'playground' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:8:66: '4' is a magic number. [MagicNumber]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:9:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:9:26: Variable 'player1' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:9:35: Variable 'player2' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:10:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:10:23: Variable 'currentPlayer' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:12:43: Parameter index should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Game.java:13:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:8:20: Using the '.*' form of import should be avoided - cards.heroes.*. [AvoidStarImport]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:18:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:23:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:24:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:24:32: Variable 'mapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:26:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:26:24: Name 'CardInputToCard' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:26:40: Parameter cardInput should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:104:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:104:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:104:42: Parameter inputData should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:133:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:133:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:133:39: Parameter startGameInput should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:137: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:138: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:147:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:147:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:147:34: Parameter actionInput should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:147:60: Parameter output should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:148:22: 'mapper' hides a field. [HiddenField]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:154: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:158: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Helpers.java:162: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:20:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:20:25: Parameter deck should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:23:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:27:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:27:34: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:31:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:35:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:35:28: Parameter nrDecks should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:39:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:43:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:43:26: Parameter decks should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:47:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:49:26: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:50:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:51:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:52:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:56:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:60:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:60:25: Parameter hero should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:64:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:68:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:68:32: Parameter currentDeck should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:72:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:76:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\game\Player.java:76:25: Parameter hand should be final. [FinalParameters]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\main\Main.java:3:8: Unused import - cards.Card. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\main\Main.java:4:8: Unused import - cards.Deck. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\main\Main.java:11:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\main\Main.java:13:8: Unused import - game.Game. [UnusedImports]
[ERROR] D:\Teme\POO\Tema1-OOP\.\src\main\Main.java:14:8: Unused import - game.Player. [UnusedImports]
Audit done.
Checkstyle ends with 249 errors.
